#version 330 core

layout (location=0) in vec3 aPos;
layout (location=1) in vec3 aNor;
layout (location=2) in vec2 aTexCoord;
layout (location=3) in vec3 aT;
layout (location=4) in vec3 aB;

out vec2 TexCoord;

out vec3 FragPos;
out mat3 TBN;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
  FragPos= vec3(model * vec4(aPos, 1.0));
  gl_Position = projection*view*model*vec4(aPos,1.0);
  mat3 normalMatrix = transpose(inverse(mat3(model)));
  vec3 T = normalize(normalMatrix * aT);
  vec3 B = normalize(normalMatrix * aB);
  vec3 N = normalize(normalMatrix * aNor);
  TBN = mat3(T,B,N);
  TexCoord = aTexCoord;
}